name: aws-v5 
on: 
  push:
    branches:
      - main #main branch에 push가 되면 아래 jobs 들을 해라. 어떤 브랜치인지 알려면, remote git에서 확인해라

# 라인이 다 잘 맞아야 실행이 된다. 안그러면 실행이 잘 안된다.
# actions/setup-java@v2는 사용자 정의 배포를 지원하고 Zulu OpenJDK, Eclipse Temurin 및 Adopt OpenJDK를 기본적으로 지원합니다. v1은 Zulu OpenJDK만 지원합니다.
jobs: #이건 키워드이다. 위에 name, on, push, branches 다 키워드 이다.
  build: # 마음대로 적어도됨. jobs의 최종목표를 여기다 쓴다.
    runs-on: ubuntu-18.04 #키워드.. runs-on은 설치 하라는 뜻 내부에는 도커라는 기술 쓰임
    steps:
      - name: Checkout # - 는 sequence를 의미하고 꼭 - 써줘야 한다.
        uses: actions/checkout@v2 # actions는 라이브러리, 스크립트들의 모임. 스크립트 적기 귀찮은 것들을 라이브러리 형태로 제공해준다.
      - name: Set up JDK 11
        uses: actions/setup-java@v1 #actions/setup-java@v1
        with:
          java-version: 11
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew #스크립트, 실행권한을 준다.
        shell: bash
      - name: Build with Gradle
        run: ./gradlew clean build
        shell: bash
    # UTC가 기준이기 때문에 한국시간으로 맞추려면 +9시간 해야 한다.
      - name: Get current time
        uses: 1466587594/get-current-time@v2 #배포버전에서 우리가 한데로, run: systemctl 시간설정 / shell:bash 사용해도 됨
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00"
      - name: Show Current Time #현재 시간을 보여준다.
        run: echo "CurrentTime=${{steps.current-time.outputs.formattedTime}}"
        shell: bash

      # EB에 CD 하기 위해 추가 작성, 
      - name: Generate deployment package
        run: | #옆에 분홍색 파이프 라인을 써면 아래처럼 명령어를 여러개 만들 수 있다.
          mkdir -p deploy
          cp build/libs/*.jar deploy/application.jar
          cp Procfile deploy/Procfile
          cp -r .ebextensions deploy/.ebextensions
          cd deploy && zip -r deploy.zip .
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v20 # 엘라스틴 빈스톡으로 이동시킨다.
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }} #Github Action은 AWS에 EC2로 갈 권한이 없다. 그래서 그 권한을 주기 위해 access를 준다.
          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
          application_name: aws-v5-beanstalk # 엘리스틱 빈스톡 애플리케이션 이름!
          environment_name: Awsv5beanstalk-env # 엘리스틱 빈스톡 환경 이름!
          version_label: aws-v5-${{steps.current-time.outputs.formattedTime}} #올라갈 버전은 계속 이름이 바꿔져야 하니까, 뒤에 시간을 불러와서 붙여서 새 버전의 이름으로 한다.
          region: ap-northeast-2 # 서울 ap-northeast-2 버지니아북부 us-east-1 , 엘라스틱 빈톡스 오른쪽 위에 어느나라로 되어 있는지 확인해라 
          deployment_package: deploy/deploy.zip #이것만 엘라스틱 빈스톡에 배포하겠다.